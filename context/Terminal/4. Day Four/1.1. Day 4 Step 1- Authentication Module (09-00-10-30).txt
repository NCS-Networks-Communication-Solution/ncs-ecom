Last login: Sun Sep 28 15:51:02 on ttys001
pkaewmanee@Phakkhapons-MacBook-Pro ~ % cd ~/Desktop/Project_Hiroshima/ncs-ecom/backend
pkaewmanee@Phakkhapons-MacBook-Pro backend % npm install @nestjs/jwt @nestjs/passport passport passport-jwt bcryptjs

added 1 package, and audited 826 packages in 3s

139 packages are looking for funding
  run `npm fund` for details

5 low severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
pkaewmanee@Phakkhapons-MacBook-Pro backend % npm install --save-dev @types/passport-jwt @types/bcryptjs

added 1 package, and audited 827 packages in 2s

139 packages are looking for funding
  run `npm fund` for details

5 low severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
pkaewmanee@Phakkhapons-MacBook-Pro backend % nest g module auth
nest g controller auth
nest g service auth
nest g module users
nest g service users
CREATE src/auth/auth.module.ts (81 bytes)
UPDATE src/app.module.ts (373 bytes)
CREATE src/auth/auth.controller.spec.ts (478 bytes)
CREATE src/auth/auth.controller.ts (97 bytes)
UPDATE src/auth/auth.module.ts (166 bytes)
CREATE src/auth/auth.service.spec.ts (446 bytes)
CREATE src/auth/auth.service.ts (88 bytes)
UPDATE src/auth/auth.module.ts (240 bytes)
CREATE src/users/users.module.ts (82 bytes)
UPDATE src/app.module.ts (438 bytes)
CREATE src/users/users.service.spec.ts (453 bytes)
CREATE src/users/users.service.ts (89 bytes)
UPDATE src/users/users.module.ts (159 bytes)
pkaewmanee@Phakkhapons-MacBook-Pro backend % cat > src/auth/jwt.strategy.ts << 'EOF'
import { ExtractJwt, Strategy } from 'passport-jwt';
import { PassportStrategy } from '@nestjs/passport';
import { Injectable } from '@nestjs/common';

@Injectable()
export class JwtStrategy extends PassportStrategy(Strategy) {
  constructor() {
    super({
      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
      ignoreExpiration: false,
      secretOrKey: process.env.JWT_SECRET || 'ncs-jwt-secret-dev-2025',
    });
  }

  async validate(payload: any) {
    return { userId: payload.sub, email: payload.email, role: payload.role };
  }
}
EOF
pkaewmanee@Phakkhapons-MacBook-Pro backend % >....                              
  }

  private generateTokens(user: any) {
    const payload = {
      sub: user.id,
      email: user.email,
      role: user.role,
      companyId: user.companyId,
    };

    return {
      access_token: this.jwtService.sign(payload),
      user: {
        id: user.id,
        name: user.name,
        email: user.email,
        role: user.role,
        company: user.company.name,
      },
    };
  }
}
EOF
pkaewmanee@Phakkhapons-MacBook-Pro backend % >....                              

@Controller('auth')
export class AuthController {
  constructor(private authService: AuthService) {}

  @Post('register')
  async register(@Body() dto: {
    email: string;
    password: string;
    name: string;
    companyId: string;
  }) {
    return this.authService.register(dto.email, dto.password, dto.name, dto.companyId);
  }

  @Post('login')
  @HttpCode(HttpStatus.OK)
  async login(@Body() dto: { email: string; password: string }) {
    return this.authService.login(dto.email, dto.password);
  }
}
EOF
pkaewmanee@Phakkhapons-MacBook-Pro backend % 
