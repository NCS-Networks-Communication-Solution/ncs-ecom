Last login: Fri Sep 26 09:45:03 on ttys000
pkaewmanee@Phakkhapons-MacBook-Pro ~ % brew install --cask docker
open -a Docker

==> Downloading https://desktop.docker.com/mac/main/amd64/204649/Docker.dmg
######################################################################### 100.0%
==> Installing Cask docker-desktop
==> Moving App 'Docker.app' to '/Applications/Docker.app'
==> Linking Binary 'docker-credential-desktop' to '/usr/local/bin/docker-credent
==> Linking Binary 'docker-credential-ecr-login' to '/usr/local/bin/docker-crede
==> Linking Binary 'docker-credential-osxkeychain' to '/usr/local/bin/docker-cre
==> Linking Binary 'hub-tool' to '/usr/local/bin/hub-tool'
==> Linking Binary 'kubectl' to '/usr/local/bin/kubectl.docker'
==> Linking Binary 'docker-compose' to '/usr/local/cli-plugins/docker-compose'
Password:
==> Linking Bash Completion 'docker-compose.bash-completion' to '/usr/local/etc/
Warning: It seems there is already a Bash Completion at '/usr/local/etc/bash_completion.d/docker' from formula docker-completion; skipping link.
==> Linking Fish Completion 'docker-compose.fish-completion' to '/usr/local/shar
Warning: It seems there is already a Fish Completion at '/usr/local/share/fish/vendor_completions.d/docker.fish' from formula docker-completion; skipping link.
==> Linking Zsh Completion 'docker-compose.zsh-completion' to '/usr/local/share/
Warning: It seems there is already a Zsh Completion at '/usr/local/share/zsh/site-functions/_docker' from formula docker-completion; skipping link.
==> Linking Binary 'com.docker.hyperkit' to '/usr/local/bin/hyperkit'
Warning: It seems there is already a Binary at '/usr/local/bin/docker' from formula docker; skipping link.
🍺  docker-desktop was successfully installed!
==> No outdated dependents to upgrade!
pkaewmanee@Phakkhapons-MacBook-Pro ~ % cd ~/Desktop/Project_Hiroshima/ncs-ecom
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % ls -la docker-compose.yml
-rw-r--r--  1 pkaewmanee  staff  873 Sep 25 16:22 docker-compose.yml
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % docker-compose up -d
env file /Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/.env not found: stat /Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/.env: no such file or directory
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % ls -a | grep -E '^\.env(\.example|\.sample)?$'

pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % cp .env.example .env
cp: .env.example: No such file or directory
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % cd ~
pkaewmanee@Phakkhapons-MacBook-Pro ~ % open -a Docker
docker compose version

Docker Compose version v2.39.2-desktop.1
pkaewmanee@Phakkhapons-MacBook-Pro ~ % cd ~/Desktop/Project_Hiroshima/ncs-ecom
grep -nE 'env_file|environment' docker-compose.yml
# List ${VARS} used in the file
grep -oE '\$\{[A-Za-z0-9_]+\}' docker-compose.yml | tr -d '${}' | sort -u

4:    environment:
37:    env_file:
zsh: command not found: #
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % grep -nE 'env_file|environment' docker-compose.yml
grep -oE '\$\{[A-Za-z0-9_]+\}' docker-compose.yml | tr -d '${}' | sort -u
4:    environment:
37:    env_file:
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % cd ~/Desktop/Project_Hiroshima/ncs-ecom

# satisfy env_file requirement
: > .env

# sanity check and start
docker compose config
docker compose up -d
docker compose ps

zsh: command not found: #
zsh: command not found: #
name: ncs-ecom
services:
  backend:
    build:
      context: /Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/backend
      dockerfile: Dockerfile
      target: dev
    depends_on:
      postgres:
        condition: service_healthy
        required: true
    networks:
      default: null
    volumes:
      - type: bind
        source: /Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/backend
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  postgres:
    environment:
      POSTGRES_DB: ncsdb
      POSTGRES_PASSWORD: defaultpass
      POSTGRES_USER: ncsadmin
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ncsadmin
      timeout: 5s
      interval: 10s
      retries: 5
    image: postgres:15-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
        volume: {}
  redis:
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 5s
      interval: 10s
      retries: 5
    image: redis:7-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    volumes:
      - type: volume
        source: redisdata
        target: /data
        volume: {}
networks:
  default:
    name: ncs-ecom_default
volumes:
  pgdata:
    name: ncs-ecom_pgdata
  redisdata:
    name: ncs-ecom_redisdata
[+] Running 21/21
 ✔ postgres Pulled                                                        32.2s 
   ✔ 1ae1ed8c1e41 Pull complete                                            0.6s 
   ✔ fc2b15c27045 Pull complete                                            1.1s 
   ✔ 25ad4f680a29 Pull complete                                            1.6s 
   ✔ 08a69ddf91e5 Pull complete                                            1.2s 
   ✔ ced36356131f Pull complete                                            1.4s 
   ✔ 9824c27679d3 Pull complete                                            2.6s 
   ✔ 240908555035 Pull complete                                           23.4s 
   ✔ 13f83b31e777 Pull complete                                            1.2s 
   ✔ 06cd8c6c6a3a Pull complete                                            2.4s 
   ✔ ebe21bfc7d0e Pull complete                                            1.2s 
   ✔ 2388c2ea273d Pull complete                                            1.2s 
 ✔ redis Pulled                                                           30.6s 
   ✔ a976ed7e7808 Pull complete                                            1.3s 
   ✔ 0368fd46e3c6 Pull complete                                            2.6s 
   ✔ 4c55286bbede Pull complete                                            1.6s 
   ✔ 5e28347af205 Pull complete                                            2.7s 
   ✔ 311eca34042e Pull complete                                            2.6s 
   ✔ e6fe6f07e192 Pull complete                                           21.8s 
   ✔ a2cadbfeca72 Pull complete                                            1.4s 
   ✔ 4f4fb700ef54 Pull complete                                            0.7s 
[+] Building 0.5s (2/2) FINISHED                                                
 => [internal] load local bake definitions                                 0.0s
 => => reading from stdin 602B                                             0.0s
 => [internal] load build definition from Dockerfile                       0.0s
 => => transferring dockerfile: 2B                                         0.0s
failed to solve: failed to read dockerfile: open Dockerfile: no such file or directory

NAME      IMAGE     COMMAND   SERVICE   CREATED   STATUS    PORTS
pkaewmanee@Phakkhapons-MacBook-Pro ncs-ecom % 
