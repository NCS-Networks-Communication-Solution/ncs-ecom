{"file":"/Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/backend/src/products/products.service.ts","mappings":"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","names":[],"sources":["/Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/backend/src/products/products.service.ts"],"sourcesContent":["import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from '../prisma.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { randomUUID } from 'crypto';\n\ninterface FindAllOptions {\n  search?: string;\n  categoryId?: string;\n  minPrice?: number;\n  maxPrice?: number;\n  page?: number;\n  limit?: number;\n}\n\n@Injectable()\nexport class ProductsService {\n  constructor(private prisma: PrismaService) {}\n\n  async findAll(options: FindAllOptions = {}) {\n    const { search, categoryId, minPrice, maxPrice, page = 1, limit = 20 } = options;\n    const where: Prisma.productsWhereInput = {};\n\n    if (search) {\n      where.OR = [\n        { nameEn: { contains: search, mode: 'insensitive' } },\n        { nameTh: { contains: search, mode: 'insensitive' } },\n        { sku: { contains: search, mode: 'insensitive' } },\n      ];\n    }\n\n    if (categoryId) {\n      where.categoryId = categoryId;\n    }\n\n    if (minPrice !== undefined || maxPrice !== undefined) {\n      where.price = {};\n      if (minPrice !== undefined) {\n        where.price.gte = new Prisma.Decimal(minPrice);\n      }\n      if (maxPrice !== undefined) {\n        where.price.lte = new Prisma.Decimal(maxPrice);\n      }\n    }\n\n    const skip = (page - 1) * limit;\n\n    const [items, total] = await this.prisma.$transaction([\n      this.prisma.products.findMany({\n        where,\n        include: { categories: true },\n        skip,\n        take: limit,\n        orderBy: { nameEn: 'asc' },\n      }),\n      this.prisma.products.count({ where }),\n    ]);\n\n    const hasMore = skip + items.length < total;\n\n    return {\n      items,\n      total,\n      page,\n      limit,\n      hasMore,\n    };\n  }\n\n  async findOne(id: string) {\n    const product = await this.prisma.products.findUnique({\n      where: { id },\n      include: { categories: true },\n    });\n\n    if (!product) {\n      throw new NotFoundException(`Product with ID ${id} not found`);\n    }\n\n    return product;\n  }\n\n  async create(dto: CreateProductDto) {\n    await this.ensureCategoryExists(dto.categoryId);\n\n    const existingSku = await this.prisma.products.findUnique({ where: { sku: dto.sku } });\n    if (existingSku) {\n      throw new ConflictException(`Product with SKU ${dto.sku} already exists`);\n    }\n\n    const productData: Prisma.productsCreateInput = {\n      id: randomUUID(),\n      sku: dto.sku,\n      nameEn: dto.nameEn,\n      nameTh: dto.nameTh,\n      description: dto.description ?? undefined,\n      price: new Prisma.Decimal(dto.price),\n      stock: dto.stock,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      categories: {\n        connect: { id: dto.categoryId },\n      },\n    };\n\n    try {\n      return await this.prisma.products.create({\n        data: productData,\n        include: { categories: true },\n      });\n    } catch (error) {\n      throw new ConflictException('Failed to create product. Check SKU and category.');\n    }\n  }\n\n  async update(id: string, dto: UpdateProductDto) {\n    await this.findOne(id);\n\n    if (dto.categoryId) {\n      await this.ensureCategoryExists(dto.categoryId);\n    }\n\n    const productData: Prisma.productsUpdateInput = {\n      updatedAt: new Date(),\n    };\n\n    if (dto.nameEn !== undefined) {\n      productData.nameEn = dto.nameEn;\n    }\n\n    if (dto.nameTh !== undefined) {\n      productData.nameTh = dto.nameTh;\n    }\n\n    if (dto.description !== undefined) {\n      productData.description = dto.description;\n    }\n\n    if (dto.price !== undefined) {\n      productData.price = new Prisma.Decimal(dto.price);\n    }\n\n    if (dto.stock !== undefined) {\n      productData.stock = dto.stock;\n    }\n\n    if (dto.categoryId) {\n      productData.categories = { connect: { id: dto.categoryId } };\n    }\n\n    try {\n      return await this.prisma.products.update({\n        where: { id },\n        data: productData,\n        include: { categories: true },\n      });\n    } catch (error) {\n      throw new ConflictException('Failed to update product.');\n    }\n  }\n\n  async remove(id: string) {\n    await this.findOne(id);\n\n    return this.prisma.products.delete({\n      where: { id },\n      include: { categories: true },\n    });\n  }\n\n  private async ensureCategoryExists(categoryId: string): Promise<void> {\n    const category = await this.prisma.categories.findUnique({ where: { id: categoryId } });\n\n    if (!category) {\n      throw new NotFoundException(`Category with ID ${categoryId} not found`);\n    }\n  }\n}\n"],"version":3}