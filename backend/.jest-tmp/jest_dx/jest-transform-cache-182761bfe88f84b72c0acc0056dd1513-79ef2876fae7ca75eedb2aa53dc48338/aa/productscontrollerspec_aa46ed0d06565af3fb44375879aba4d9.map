{"file":"/Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/backend/src/products/products.controller.spec.ts","mappings":";;AAAA,6CAAsD;AACtD,+DAA2D;AAC3D,yDAAqD;AAErD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,UAA8B,CAAC;IAEnC,MAAM,mBAAmB,GAAG;QAC1B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;QAC1B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC7D,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;QAC3D,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;KAChE,CAAC;IAEF,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC3D,WAAW,EAAE,CAAC,wCAAkB,CAAC;YACjC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,kCAAe;oBACxB,QAAQ,EAAE,mBAAmB;iBAC9B;aACF;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,UAAU,GAAG,MAAM,CAAC,GAAG,CAAqB,wCAAkB,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,CAAC,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACzD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/pkaewmanee/Desktop/Project_Hiroshima/ncs-ecom/backend/src/products/products.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\n\ndescribe('ProductsController', () => {\n  let controller: ProductsController;\n\n  const mockProductsService = {\n    findAll: jest.fn(() => []),\n    findOne: jest.fn(() => ({ id: '1', nameEn: 'Test Product' })),\n    create: jest.fn(() => ({ id: '1', nameEn: 'New Product' })),\n    update: jest.fn(() => ({ id: '1', nameEn: 'Updated Product' })),\n  };\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [ProductsController],\n      providers: [\n        {\n          provide: ProductsService,\n          useValue: mockProductsService,\n        },\n      ],\n    }).compile();\n\n    controller = module.get<ProductsController>(ProductsController);\n  });\n\n  it('should be defined', () => {\n    expect(controller).toBeDefined();\n  });\n\n  it('should get all products', async () => {\n    expect(await controller.findAll()).toEqual([]);\n    expect(mockProductsService.findAll).toHaveBeenCalled();\n  });\n});\n"],"version":3}